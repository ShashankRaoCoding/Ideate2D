{"Ideate2D":{"slug":"Ideate2D","filePath":"Ideate2D.md","title":"Ideate2D","links":[],"tags":[],"content":"🎮 Ideate2D – Make 2D Games &amp; Apps Without the Fuss\nIdeate2D is a WYSIWYG 2D game engine built on top of PyGame, designed to help you turn ideas into games—fast. Whether you’re a complete beginner or a seasoned developer who just wants to skip the boilerplate, Ideate2D is here to get you building quickly.\n\n💡 Why Ideate2D?\n\n\nVisual-first workflow: Design your levels and scenes by drawing directly—no need to code every element by hand.\n\n\nBuilt on PyGame: Enjoy full access to one of Python’s most powerful game libraries.\n\n\nOpen source &amp; hackable: Want to dig in? It’s all Python, and you’re free to extend or tweak it however you like.\n\n\nNo setup headaches: Install and go. No bloated dependencies or complicated configs.\n\n\nPerfect for prototyping: Go from concept to playable in minutes—ideal for game jams, class projects, or testing weird ideas.\n\n\nWhether it’s your first game or your next big prototype, Ideate2D helps you skip the tedium and focus on what matters: creating.\n\n⚙️ Quick Start\n\nNote: You’ll need to install PyGame to use Ideate2D.\nCheck out the official guide here:\n🔗 Getting Started – PyGame Wiki\n\n\n🧩 What You See Is What You Get\nIdeate2D sticks to its core philosophy: What You See Is What You Get.\nThe final game looks exactly like what you build in the editor—no surprises, no hidden steps.\nWe’ve handled the essentials—like image scaling, object physics, gravity, and asset management—so you can focus on design, not setup.\n\n📄 License &amp; Disclaimer\nIdeate2D is released under the GNU LGPL v2.1, the same license as PyGame. You can find full license terms in the README.md or visit:\n🔗 github.com/shashankraocoding/Ideate2D\n⚠️ Disclaimer:\n\n\nUse at your own risk.\n\n\nNo warranty provided: The author and contributors are not liable for any damages, data loss, or unintended consequences resulting from use or misuse.\n\n\nThis is an experimental project and may contain bugs or incomplete features.\n\n\nBy using Ideate2D, you agree to the above terms.\n\n📥 Download\nComing Soon!\nCheck back for the first public release!\n\n \n\t \n\t\t.page-title { \n\t\t\tfont-size: 1.7rem; \n\t\t}\n\t \n"},"Tutorial":{"slug":"Tutorial","filePath":"Tutorial.md","title":"Tutorial","links":[],"tags":[],"content":"\n\n                  \n                  Video\n                  \n                \n\n\nVideo Guides Coming Soon!!\n\n\n\nJust 3 Object Types to Make Anything\nIdeate2D keeps level creation simple and flexible. With just three core object types, you can build just about anything—from platforms and hazards to interactive environments and effects.\n\n🔹 Static Objects\nAs the name suggests, these objects don’t move on their own and are unaffected by external forces like gravity or collisions.\nUse for:\n\n\nFloors, walls, platforms\n\n\nBoundaries or barriers\n\n\nAnything you want to stay put\n\n\nYou can still move static objects (like moving platforms), but only through Special Functions—custom code you attach to the object.\n\n🔸 Dynamic Objects\nDynamic objects respond to external forces. This includes physics, gravity, collisions, and being pushed by the player or other dynamic elements.\nUse for:\n\n\nPlayers\n\n\nEnemies\n\n\nCrates or pushable blocks\n\n\nAnything that should move naturally in the world\n\n\n\n🌀 Illusory Objects\nThese are the most customizable and versatile objects in Ideate2D. Players can see them and walk through them, but can’t interact physically with them—meaning no collisions or physics.\nUse for:\n\n\nTrigger zones (e.g. when a player walks through a hidden checkpoint)\n\n\nCosmetic objects like trees, background elements, fog, etc.\n\n\nInvisible boundaries, event triggers, dialogue popups\n\n\nWith the right Special Function, illusory objects become the backbone of interactivity and immersion.\n\n✨ Custom Objects\nWant something truly unique? You can define your own object types!\nHow:\n\n\nOpen datastructures/objects.py\n\n\nCreate a new class that inherits from object_template\n\n\nDefine custom properties and behaviors\n\n\n\n⚙️ Special Functions\nSpecial Functions let you define how an object behaves during the game loop.\nEvery object in Ideate2D has a Special Function that gets called once per frame. By default, it does nothing—but you can customize it to do anything.\nExamples:\n\n\nA handle_inputs function for the player\n\n\nA patrol_enemy behavior for a roaming NPC\n\n\nA trigger_event for an illusory zone\n\n\nHow to create one:\n\n\nOpen datastructures/specials.py\n\n\nWrite a function that takes a single argument (the object itself)\n\n\nSave the file—Ideate2D’s level editor will automatically detect it!\n\n\nThen just assign your function to any object using the editor.\n"},"index":{"slug":"index","filePath":"index.md","title":"index","links":[],"tags":[],"content":" \n\t \n\t\twindow.location.href = `shashankraocoding.github.io/Ideate2D/Ideate2D.html` \n\t \n \n \n\t \n\t\t.page-title { \n\t\t\tfont-size: 1.70rem; \n\t\t}\n\t \n"}}